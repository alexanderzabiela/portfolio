{"version":3,"sources":["webpack:///./src/components/two-col.js","webpack:///./src/templates/post.js","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js"],"names":["TwoCol","query","shortcodes","PostTemplate","post","data","mdx","color","css","frontmatter","title","components","body","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","length","$args","push","apply","proto","prototype","instance","Object","result","Function","call","MDXRenderer","require","module","React","useMDXComponents","useMDXScope","scope","children","props","mdxComponents","mdxScope","End","fullScope","keys","values","key","fn"],"mappings":"iLAiDeA,EA/CA,YAAO,MAAP,qBAAH,qe,oCCSL,IAAMC,EAAK,aAWZC,EAAa,CACjBF,U,wCAwBaG,UArBM,SAAC,GAAD,IAAgBC,EAAhB,EAAGC,KAAQC,IAAX,OACnB,YAAC,IAAD,KACE,YAAC,IAAD,CAASC,MAAM,WACb,YAAC,IAAD,KACE,YAAC,IAAD,CACEA,MAAM,UACNC,IAAG,GAFL,IAMM,wBAAOJ,EAAKK,YAAYC,MAAxB,KANN,MAQA,YAAC,cAAD,CAAaC,WAAYT,GACvB,YAAC,cAAD,KAAcE,EAAKQ,Y,oBCtC7B,IAAIC,EAAU,EAAQ,GAClBC,EAAS,EAAQ,IACjBC,EAAY,EAAQ,IACpBC,EAAW,EAAQ,GACnBC,EAAW,EAAQ,IACnBC,EAAQ,EAAQ,IAChBC,EAAO,EAAQ,KACfC,GAAc,EAAQ,GAAaC,SAAW,IAAIC,UAIlDC,EAAiBL,EAAM,WACzB,SAASM,KACT,QAASJ,EAAW,aAA6B,GAAII,aAAcA,KAEjEC,GAAYP,EAAM,WACpBE,EAAW,gBAGbP,EAAQA,EAAQa,EAAIb,EAAQW,GAAKD,GAAkBE,GAAW,UAAW,CACvEH,UAAW,SAAmBK,EAAQC,GACpCb,EAAUY,GACVX,EAASY,GACT,IAAIC,EAAYC,UAAUC,OAAS,EAAIJ,EAASZ,EAAUe,UAAU,IACpE,GAAIL,IAAaF,EAAgB,OAAOH,EAAWO,EAAQC,EAAMC,GACjE,GAAIF,GAAUE,EAAW,CAEvB,OAAQD,EAAKG,QACX,KAAK,EAAG,OAAO,IAAIJ,EACnB,KAAK,EAAG,OAAO,IAAIA,EAAOC,EAAK,IAC/B,KAAK,EAAG,OAAO,IAAID,EAAOC,EAAK,GAAIA,EAAK,IACxC,KAAK,EAAG,OAAO,IAAID,EAAOC,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACjD,KAAK,EAAG,OAAO,IAAID,EAAOC,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAG5D,IAAII,EAAQ,CAAC,MAEb,OADAA,EAAMC,KAAKC,MAAMF,EAAOJ,GACjB,IAAKT,EAAKe,MAAMP,EAAQK,IAGjC,IAAIG,EAAQN,EAAUO,UAClBC,EAAWvB,EAAOG,EAASkB,GAASA,EAAQG,OAAOF,WACnDG,EAASC,SAASN,MAAMO,KAAKd,EAAQU,EAAUT,GACnD,OAAOX,EAASsB,GAAUA,EAASF,M,oBCtCvC,IAAMK,EAAcC,EAApB,KAEAC,UAAiB,CACfF,YAAaA,I,kqDCTf,IAAMG,EAAQF,EAAd,G,EACkCA,EAAQ,KAAlCG,E,EAAAA,iBAAkBxC,E,EAAAA,IAClByC,EAAgBJ,EAAQ,KAAxBI,YAERH,UAAiB,SAAqB,GAKlC,IAJFI,EAIC,EAJDA,MACArC,EAGC,EAHDA,WACAsC,EAEC,EAFDA,SACGC,E,oIACF,sCACKC,EAAgBL,EAAtB,GACMM,EAAWL,EAFhB,GAKKM,EAAMR,EAAA,QAAc,WACxB,MACE,OAAO,KAGT,IAAMS,EAAS,GAGbT,MAHa,EAIbvC,OAJF,GAQMiD,EAAOjB,YAAb,GACMkB,EAASD,EAAA,IAAS,SAAAE,GAAG,OAAIH,EAAJ,KAG3B,OAFQ,mCAAR,KAEOI,2BAAP,MACC,CAACT,EAlBJ,IAoBA,OAAOJ,EAAA,mBAA2BlC,WAAYwC,GAA9C","file":"component---src-templates-post-js-30a157b865634f9cb3c1.js","sourcesContent":["import styled from '@emotion/styled';\n\nconst TwoCol = styled('div')`\n  p {\n    color: white;\n    font-size: 13px;\n    line-height: 1.5;\n  }\n  @media only screen and (min-width: 768px) {\n    p {\n      column-count: 2;\n    }\n  }\n\n  h3 {\n    color: #fed136;\n  }\n\n  p,\n  h3 {\n    width: 90vw;\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  @media only screen and (min-width: 768px) {\n    p,\n    h3 {\n      width: 80%;\n      margin-left: auto;\n      margin-right: auto;\n    }\n  }\n  .gatsby-resp-image-wrapper {\n    max-width: 100% !important;\n    margin-bottom: 20px;\n    margin-top: 20px;\n    background-color: white;\n    @media only screen and (min-width: 768px) {\n      margin-bottom: 50px;\n      margin-top: 50px;\n    }\n  }\n\n  /* .gatsby-resp-image-wrapper:nth-of-type(2) {\n    max-width: 650px !important;\n  } */\n`;\n\nexport default TwoCol;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport { MDXProvider } from '@mdx-js/react';\nimport { css } from '@emotion/core';\nimport Layout from '../components/layout';\nimport Section from '../components/section';\nimport SectionContainer from '../components/section-container';\nimport SectionTitle from '../components/section-title';\nimport TwoCol from '../components/two-col';\n\nexport const query = graphql`\n  query($slug: String!) {\n    mdx(frontmatter: { slug: { eq: $slug } }) {\n      frontmatter {\n        title\n      }\n      body\n    }\n  }\n`;\n\nconst shortcodes = {\n  TwoCol,\n};\n\nconst PostTemplate = ({ data: { mdx: post } }) => (\n  <Layout>\n    <Section color=\"#333333\">\n      <SectionContainer>\n        <SectionTitle\n          color=\"#fed136\"\n          css={css`\n            color: white;\n          `}\n        >\n          &lt;<span>{post.frontmatter.title} </span>/&gt;\n        </SectionTitle>\n        <MDXProvider components={shortcodes}>\n          <MDXRenderer>{post.body}</MDXRenderer>\n        </MDXProvider>\n        {/* <ReadLink to=\"/\">&larr; back to all posts</ReadLink> */}\n      </SectionContainer>\n    </Section>\n  </Layout>\n);\n\nexport default PostTemplate;\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n"],"sourceRoot":""}